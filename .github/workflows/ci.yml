name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop

env:
  HOST_URL: ${{ secrets.HOST_URL }}
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  APP_SECRET: ${{ secrets.APP_SECRET }}
  ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  REGISTRAR_USERNAME: ${{ secrets.REGISTRAR_USERNAME }}
  REGISTRAR_PASSWORD: ${{ secrets.REGISTRAR_PASSWORD }}
  EDITOR_USERNAME: ${{ secrets.EDITOR_USERNAME }}
  EDITOR_PASSWORD: ${{ secrets.EDITOR_PASSWORD }}
  ORGADMIN_USERNAME: ${{ secrets.ORGADMIN_USERNAME }}
  ORGADMIN_PASSWORD: ${{ secrets.ORGADMIN_PASSWORD }}
  ORGEDITOR_USERNAME: ${{ secrets.ORGEDITOR_USERNAME }}
  ORGEDITOR_PASSWORD: ${{ secrets.ORGEDITOR_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          tags: app_test:latest
          build-args: NODE_ENV=test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Unit Tests
        id: test
        run: script/ci/test
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: [1, 2, 3, 4, 5]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: regulated-professions-register-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      opensearch:
        image: opensearchproject/opensearch:latest
        env:
          discovery.type: single-node
          plugins.security.disabled: true
        options: >-
          --health-cmd "curl http://admin:admin@localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 9200:9200
          - 9600:9600

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'

      - name: Build
        run: |
          npm install
          npm run build:assets
          npm run build

      - name: End to End Tests
        id: test
        run: script/ci/e2e
        env:
          MATRIX: ${{ matrix.container }}
          DATABASE_URL: postgres://postgres:password@localhost:5432/regulated-professions-register-test
          REDIS_URI: redis://localhost:6379
          OPENSEARCH_NODE: http://admin:admin@localhost:9200

      - name: Upload end-to-end-test screenshots
        if: failure() && steps.Test.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: end-to-end-test-screenshots
          path: cypress/screenshots/
          retention-days: 14

      - name: Upload end-to-end-test videos
        if: failure() && steps.Test.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: end-to-end-test-videos
          path: cypress/videos/
          retention-days: 14
