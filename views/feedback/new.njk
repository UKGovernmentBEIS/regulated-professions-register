{% extends "base.njk" %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% block content %}
  {% set visitReasonOtherHtml %}
    {{ govukInput({
      id: "visit-reason-other",
      name: "visitReasonOther",
      type: "text",
      value: submittedValues.visitReasonOther,
      errorMessage: errors.visitReasonOther | tError,
      label: {
        text: ""
      },
      hint: {
          text: ( "feedback.new.warningMessage" |t )
        }
    }) }}
  {% endset -%}

  {% set emailAddressHtml %}
    {{ govukInput({
      id: "beta-survey-email",
      name: "betaSurveyEmail",
      type: "text",
      value: submittedValues.betaSurveyEmail,
      errorMessage: errors.betaSurveyEmail | tError,
      label: {
        text: ("feedback.questions.betaSurveyEmail.title" | t)
      }
    }) }}
  {% endset -%}

  {% set contactAuthorityNoReasonHtml %}
    {{ govukTextarea({
        name: "contactAuthorityNoReason",
        id: "contact-authority-no-reason",
        value: submittedValues.contactAuthorityNoReason,
        errorMessage: errors.contactAuthorityNoReason | tError,
        label: {
          text: ("feedback.questions.contactAuthorityNoReason.title" | t),
          classes: "govuk-label--l",
          isPageHeading: false
        },
        hint: {
          text: ( "feedback.new.warningMessage" |t )
        }
      }) }}
  {% endset -%}

  {% set specificPageHtml %}
    {{ govukInput({
      id: "problem-area-page",
      name: "problemAreaPage",
      type: "text",
      value: submittedValues.problemAreaPage,
      errorMessage: errors.problemAreaPage | tError,
      label: {
        text: ("")
      },
      hint: {
          text: ( "feedback.new.warningMessage" |t )
        }
    }) }}
  {% endset -%}

  {% set feedbackHtml %}
    {{ govukRadios({
      name: "satisfaction",
      errorMessage: errors.satisfaction | tError,
      fieldset: {
        legend: {
          text: ("feedback.questions.satisfaction.title" | t),
          classes: "govuk-fieldset__legend--l",
          isPageHeading: false
        }
      },
      items: [
        {
          value: ("feedback.questions.satisfaction.answers.vsat" | t),
          text: ("feedback.questions.satisfaction.answers.vsat" | t),
          checked: (submittedValues.satisfaction === "feedback.questions.satisfaction.answers.vsat" | t)
        },
        {
          value: ("feedback.questions.satisfaction.answers.sat" | t),
          text: ("feedback.questions.satisfaction.answers.sat" | t),
          checked: (submittedValues.satisfaction === "feedback.questions.satisfaction.answers.sat" | t)
        },
        {
          value: ("feedback.questions.satisfaction.answers.neutral" | t),
          text: ("feedback.questions.satisfaction.answers.neutral" | t),
          checked: (submittedValues.satisfaction === "feedback.questions.satisfaction.answers.neutral" | t)
        },
        {
          value: ("feedback.questions.satisfaction.answers.dis" | t),
          text: ("feedback.questions.satisfaction.answers.dis" | t),
          checked: (submittedValues.satisfaction === "feedback.questions.satisfaction.answers.dis" | t)
        },
        {
          value: ("feedback.questions.satisfaction.answers.vdis" | t),
          text: ("feedback.questions.satisfaction.answers.vdis" | t),
          checked: (submittedValues.satisfaction === "feedback.questions.satisfaction.answers.vdis" | t)
        }
      ]
      }) }}

      {{ govukTextarea({
        name: "improvements",
        id: "improvements",
        value: submittedValues.improvements,
        errorMessage: errors.improvements | tError,
        label: {
          text: ("feedback.questions.improvements.title" | t),
          classes: "govuk-label--l",
          isPageHeading: false
        },
        hint: {
          text: ( "feedback.new.warningMessage" |t )
        }
      }) }}

      {{ govukRadios({
      name: "visitReason",
      errorMessage: errors.visitReason | tError,
      fieldset: {
        legend: {
          text: ("feedback.questions.visitReason.title" | t),
          classes: "govuk-fieldset__legend--l",
          isPageHeading: false
        }
      },
      items: [
        {
          value: ("feedback.questions.visitReason.answers.1" | t),
          text: ("feedback.questions.visitReason.answers.1" | t),
          checked: (submittedValues.visitReason === "feedback.questions.visitReason.answers.1" | t)
        },
        {
          value: ("feedback.questions.visitReason.answers.2" | t),
          text: ("feedback.questions.visitReason.answers.2" | t),
          checked: (submittedValues.visitReason === "feedback.questions.visitReason.answers.2" | t)
        },
        {
          value: ("feedback.questions.visitReason.answers.3" | t),
          text: ("feedback.questions.visitReason.answers.3" | t),
          checked: (submittedValues.visitReason === "feedback.questions.visitReason.answers.3" | t)
        },
        {
          value: ("feedback.questions.visitReason.answers.other" | t),
          text: ("feedback.questions.visitReason.answers.other" | t),
          checked: (submittedValues.visitReason === "feedback.questions.visitReason.answers.other" | t),
          conditional: {
            html: visitReasonOtherHtml
          }
        }
      ]
      }) }}

      {{ govukRadios({
      name: "contactAuthority",
      errorMessage: errors.contactAuthority | tError,
      fieldset: {
        legend: {
          text: ("feedback.questions.contactAuthority.title" | t),
          classes: "govuk-fieldset__legend--l",
          isPageHeading: false
        }
      },
      items: [
        {
          value: ("feedback.questions.contactAuthority.answers.yesWebsite" | t),
          text: ("feedback.questions.contactAuthority.answers.yesWebsite" | t),
          checked: (submittedValues.contactAuthority === "feedback.questions.contactAuthority.answers.yesWebsite" | t)
        },
        {
          value: ("feedback.questions.contactAuthority.answers.yesPhoneEmail" | t),
          text: ("feedback.questions.contactAuthority.answers.yesPhoneEmail" | t),
          checked: (submittedValues.contactAuthority === "feedback.questions.contactAuthority.answers.yesPhoneEmail" | t)
        },
        {
          value: ("feedback.questions.contactAuthority.answers.no" | t),
          text: ("feedback.questions.contactAuthority.answers.no" | t),
          checked: (submittedValues.contactAuthority === "feedback.questions.contactAuthority.answers.no" | t),
          conditional: {
            html: contactAuthorityNoReasonHtml
          }
        }
      ]
      }) }}

      {{ govukRadios({
        name: "betaSurveyYesNo",
        errorMessage: errors.betaSurveyYesNo | tError,
        fieldset: {
          legend: {
            text: ("feedback.questions.betaSurveyYesNo.title" | t),
            classes: "govuk-fieldset__legend--l",
            isPageHeading: false
          }
        },
        items: [
          {
            value: ("feedback.questions.betaSurveyYesNo.answers.yes" | t),
            text: ("feedback.questions.betaSurveyYesNo.answers.yes" | t),
            checked: (submittedValues.betaSurveyYesNo === "feedback.questions.betaSurveyYesNo.answers.yes" | t),
            conditional: {
              html: emailAddressHtml
            }
          },
          {
            value: ("feedback.questions.betaSurveyYesNo.answers.no" | t),
            text: ("feedback.questions.betaSurveyYesNo.answers.no" | t),
            checked: (submittedValues.betaSurveyYesNo === "feedback.questions.betaSurveyYesNo.answers.no" | t)
          }
        ]
      }) }}
  {% endset -%}

  {% set technicalHtml %}
    {{ govukRadios({
      name: "problemArea",
      errorMessage: errors.problemArea | tError,
      fieldset: {
        legend: {
          text: ("feedback.questions.problemArea.title" | t),
          classes: "govuk-fieldset__legend--l",
          isPageHeading: false
        }
      },
      items: [
        {
          value: ("feedback.questions.problemArea.answers.wholeSite" | t),
          text: ("feedback.questions.problemArea.answers.wholeSite" | t),
          checked: (submittedValues.problemArea === "feedback.questions.problemArea.answers.wholeSite" | t)
        },
        {
          value: ("feedback.questions.problemArea.answers.specificPage" | t),
          text: ("feedback.questions.problemArea.answers.specificPage" | t),
          checked: (submittedValues.problemArea === "feedback.questions.problemArea.answers.specificPage" | t),
          conditional:{
            html: specificPageHtml
          }
        }
      ]
      }) }}

      {{ govukTextarea({
        name: "problemDescription",
        id: "problem-area-description",
        errorMessage: errors.problemDescription | tError,
        value: submittedValues.problemDescription,
        label: {
          text: ("feedback.questions.problemDescription.title" | t),
          classes: "govuk-label--l",
          isPageHeading: false
        },
        hint: {
          text: ( "feedback.new.warningMessage" |t )
        }
      }) }}
  {% endset -%}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-three-quarters">

      <h1 class="govuk-heading-xl">
        {{ "feedback.new.title" | t }}
      </h1>

      <form action="/feedback/" method="post">

      {{ govukRadios({
        name: "feedbackOrTechnical",
        errorMessage: errors.feedbackOrTechnical | tError,
        fieldset: {
          legend: {
            text: ("feedback.questions.feedbackOrTechnical.title" | t),
            classes: "govuk-fieldset__legend--l",
            isPageHeading: false
          }
        },
        items: [
          {
            value: ("feedback.questions.feedbackOrTechnical.answers.no" | t),
            text: ("feedback.questions.feedbackOrTechnical.answers.no" | t),
            checked: (submittedValues.feedbackOrTechnical === "feedback.questions.feedbackOrTechnical.answers.no" | t),
            conditional: {
              html: feedbackHtml
            }
          },
          {
            value: ("feedback.questions.feedbackOrTechnical.answers.yes" | t),
            text: ("feedback.questions.feedbackOrTechnical.answers.yes" | t),
            checked: (submittedValues.feedbackOrTechnical === "feedback.questions.feedbackOrTechnical.answers.yes" | t),
            conditional: {
              html: technicalHtml
            }
          }
        ]
      }) }}

      {{ govukInput({
        id: "return-url",
        name: "returnUrl",
        type: "text",
        value: returnUrl,
        label: {
          text: ""
        },
        attributes: {
          "hidden": true,
          "readonly": true
        }
      }) }}

      {{ govukButton({
        text: ("feedback.submit" | t),
        preventDoubleClick: true
      }) }}
    </form>
  </div>
{% endblock %}