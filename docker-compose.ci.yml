version: '3.8'
services:
  test:
    build:
      context: .
      target: test
      args:
        NODE_ENV: 'test'
      cache_from:
        - app_test:latest
    image: app_test
    ports:
      - '3000:3000'
    depends_on:
      - test-db
      - redis
    environment:
      DATABASE_URL: postgres://postgres:password@test-db:5432/regulated-professions-register-test
      CI: 'true'
      CYPRESS_INSTALL_BINARY: 0
      HOST_URL: '${HOST_URL}'
      AUTH0_DOMAIN: '${AUTH0_DOMAIN}'
      AUTH0_CLIENT_ID: '${AUTH0_CLIENT_ID}'
      AUTH0_CLIENT_SECRET: '${AUTH0_CLIENT_SECRET}'
      APP_SECRET: '${APP_SECRET}'
      ADMIN_USERNAME: '${ADMIN_USERNAME}'
      ADMIN_PASSWORD: '${ADMIN_PASSWORD}'
      REGISTRAR_USERNAME: '${REGISTRAR_USERNAME}'
      REGISTRAR_PASSWORD: '${REGISTRAR_PASSWORD}'
      EDITOR_USERNAME: '${EDITOR_USERNAME}'
      EDITOR_PASSWORD: '${EDITOR_PASSWORD}'
      ORGADMIN_USERNAME: '${ORGADMIN_USERNAME}'
      ORGADMIN_PASSWORD: '${ORGADMIN_PASSWORD}'
      ORGEDITOR_USERNAME: '${ORGEDITOR_USERNAME}'
      ORGEDITOR_PASSWORD: '${ORGEDITOR_PASSWORD}'
      REDIS_URI: redis://redis:6379
    networks:
      - test
    volumes:
      - ./cypress/screenshots:/srv/app/cypress/screenshots:Z
      - ./cypress/videos:/srv/app/cypress/videos:Z

  test-db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./sql/create-database.test.sql:/docker-entrypoint-initdb.d/create-database.test.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - test

  redis:
    image: 'redis:alpine'
    networks:
      - test
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/var/lib/redis

networks:
  test:
volumes:
  db-data:
  redis-data:
