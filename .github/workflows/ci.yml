name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop

env:
  HOST_URL: ${{ secrets.HOST_URL }}
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  APP_SECRET: ${{ secrets.APP_SECRET }}
  ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  REGISTRAR_USERNAME: ${{ secrets.REGISTRAR_USERNAME }}
  REGISTRAR_PASSWORD: ${{ secrets.REGISTRAR_PASSWORD }}
  EDITOR_USERNAME: ${{ secrets.EDITOR_USERNAME }}
  EDITOR_PASSWORD: ${{ secrets.EDITOR_PASSWORD }}
  ORGADMIN_USERNAME: ${{ secrets.ORGADMIN_USERNAME }}
  ORGADMIN_PASSWORD: ${{ secrets.ORGADMIN_PASSWORD }}
  ORGEDITOR_USERNAME: ${{ secrets.ORGEDITOR_USERNAME }}
  ORGEDITOR_PASSWORD: ${{ secrets.ORGEDITOR_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - id: cache-docker
        uses: actions/cache@v2
        with:
          path: /tmp/docker-save
          key: docker-save-${{ hashFiles('Dockerfile', 'package-lock.json') }}

      - if: steps.cache-docker.outputs.cache-hit == 'true'
        name: Load cached Docker image
        run: docker load -i /tmp/docker-save/snapshot.tar || true

      - name: Build
        run: script/ci/cibuild

      - name: Test
        id: test
        run: script/ci/test

      - name: Upload end-to-end-test screenshots
        if: failure() && steps.Test.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: end-to-end-test-screenshots
          path: cypress/screenshots/
          retention-days: 14

      - name: Upload end-to-end-test videos
        if: failure() && steps.Test.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: end-to-end-test-videos
          path: cypress/videos/
          retention-days: 14

      - if: always() && steps.cache-docker.outputs.cache-hit != 'true'
        name: Prepare Docker cache
        run: mkdir -p /tmp/docker-save && docker save app_test:latest -o
          /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save
